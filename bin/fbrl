#!/usr/bin/env bash
#
# fbrl - checkout git branch (including remote branches), sorted by most recent commit, limit 30 last branches
# Uses fzf. This is a modified fbr() from the fzf examples
# @see <https://github.com/junegunn/fzf/wiki/examples>

__fbrl() {
  local current
  current=$(git rev-parse --abbrev-ref HEAD)
  if [ -z "$current" ]; then
    >&2 echo "You must be in a git repo to get branches."
    return 1
  fi

  local branches
  branches=$(git for-each-ref \
    --count=30 \
    --sort=-committerdate \
    --format="%(refname:short)" \
    refs/heads/ | grep -v "$current")
  if [ -z "$branches" ]; then
    >&2 echo "No branches found."
    return 1
  fi

  local out
  out=$(fzf-tmux \
    +m \
    --cycle \
    --delimiter="$(( 2 + $(wc -l <<< "$branches") ))" \
    --exit-0 \
    --expect=ctrl-y \
    --height=25% --no-hscroll --no-multi \
    --preview="git log {1} --abbrev-commit --oneline --max-count 25" \
    --prompt="${current}> " <<< "$branches") \

  local branch
  branch="$(head -2 <<< "$out" | tail -1)"
  branch="${branch//[[:blank:]]/}" # strip spaces
  branch="$(echo "$branch" | sed "s/.* //" | sed "s#remotes/[^/]*/##")"
  [ -z "$branch" ] && return 1

  local key
  key="$(head -1 <<< "$out")"
  if [[ "$key" == "ctrl-y" ]]; then
    echo "$branch" | tr -d '\n' | pbcopy
    echo "\"${branch}\" copied into clipboard"
    return
  fi

  git checkout "$branch"
}
__fbrl
